1.即在使用KMeans的过程中，通过绘制各K值下的组间平方和统计折线图，
找到折线类似手肘拐点处的点作为合适的分类k值点，原理是拐点前的点能够有效分类，之后k值的分类效果递减。

2.推荐系统的几种常用算法：
基于内容推荐 content-base：tag的特征学习，推荐列表top-N
基于协同过滤的推荐

*基于关联规则的推荐：Transaction

基于效用的推荐：定义效用函数
基于知识的推荐：构建知识图谱
组合推荐

3.关联规则：基于既往transaction对用户行为或规律的挖掘，例如从订单小票中找到item之间的关联程度

4.支持度、置信度和提升度
支持度：百分比，某个商品组合出现次数与总次数的比例，支持度越高代表这个组合出现的频率越大。
置信度：条件概率，当买了A之后有多大概率买B（有可能出现偶然，决定AB要不要放一起还得看提升度）
提升度：商品A的出现，对商品B的出现概率提升的程度
提升度 = 置信度/支持度
<1：有提升
=1：无影响
>1：有下降

5.Apriori算法原理：
查找频繁项集的过程
频繁项集：支持度大于等于最小支持度(Min Support)阈值的项集。
寻找频繁项集：寻找K=1，K=2，K=3。。。下大于最小支持度0.5的商品项集即频繁项集
最小支持度确定：
1.根据数据集的大小判断，小数据集的最小支持度一般比大数据集设得要高点
2.逐渐筛选的过程，比如要求筛选结果只有10%or5%的频繁项集，以此选择最小支持度的经验值

最小置信度确定：
条件概率，按经验调整关联规则，视需要输出的关联规则强弱而定
6.Apiori算法流程：
step1，K=1，计算K项集的支持度；
step2，筛选掉小于最小支持度的项集；
step3，如果项集为空，则对应K-1项集的结果为最终结果。
否则k=k+1,重复1-3步。

6.Apiori的缺点：算法运行过程会产生大量候选集，浪费计算空间
7.可视化视图方式：
比较：展示事物的排列顺序，比如条图。
联系：查看两个变量之间关系，比如气泡图。
构成：每个部分所占整体的百分比，比如饼图。
分布：关心各数值范围包含多少项目，如柱图。